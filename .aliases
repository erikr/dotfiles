# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

# Recursively delete `.DS_Store` and `Icon^M` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete && find . -name 'Icon' -ls -delete"

# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

# Linux-only aliases
if [[ "$OSTYPE" == "linux-gnu" ]]; then
    function update () {
        sudo apt update;
        sudo apt upgrade;
        sudo apt autoremove;
        sudo apt clean;
        conda update --all;
        conda clean -a;
    }

    # -l: long format
    # -F: displays slash after directory, etc.
    # -h: human-readable unit suffixes
    # -N: print literals and avoid quotes
    # ${colorflag}: prints OS-specific colors (see above)
    # --group-directories-first: dirs come first
    alias l="ls -lFhN ${colorflag} --group-directories-first"

    # Xclip to copy text from terminal to clipboard in Ubuntu
	alias pbcopy='xclip -sel clip'
	alias pbpaste='xclip -o'
    
    # Report file system disk space usage, excluding irrelevant file systems
    alias df='df -h -x squashfs -x tmpfs -x devtmpfs'

else # $OSTYPE must be darwin* == macos, so put mac-only aliases here%
    function update () {
        omz update;
        sudo softwareupdate -i -a;
        sudo gem update --system;
        sudo gem update;
        sudo gem cleanup;
        brew update;
        brew upgrade;
        brew cleanup;
        brew doctor;
        conda update conda;
        conda update --all;
        conda clean -a;
        sudo purge;
    }

    # --group-directories-first: self-explanatory
    # --color=auto: use colors
    # -N: print literals and avoid quotes
    alias ls='gls --color=auto --group-directories-first -N'

    # -l: long format
    # -F: displays slash after directory, etc.
    # -h: human-readable unit suffixes
    alias l="ls -lh"

	alias afk='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'
    alias js="jekyll serve"
    alias cpwd="pwd | tr -d '\n' | pbcopy"

    # Save GitHub recovery code to clipboard
    alias ghpw="cat $HOME/Dropbox\ \(Partners\ HealthCare\)/tokens-and-backups/github-personal-access-token | pbcopy"

    # Rebuild icon cache in macOS
    alias rebuildicons="sudo rm -rfv /Library/Caches/com.apple.iconservices.store; sudo find /private/var/folders/ \( -name com.apple.dock.iconcache -or -name com.apple.iconservices \) -exec rm -rfv {} \; ; sleep 3;sudo touch /Applications/* ; killall Dock; killall Finder"

    # Re-index everything in Spotlight
    alias rebuildspotlight="sudo mdutil -E /"
fi

hash -d gdr=~"/Google Drive"
hash -d db=~"/Dropbox (Partners HealthCare)"
hash -d dl=~/Downloads
hash -d dt=~/Desktop
hash -d blog=~/erikr.github.io
hash -d dotfiles=~/dotfiles
hash -d ml=~/ml
hash -d sts=~/sts-ml


# Shell scripts and utilities
alias speedtest='~/dotfiles/speedtest-cli.py'

# Print contents of CSV with perl, column, and less
function prettycsv () {
    perl -pe 's/((?<=,)|(?<=^)),/ ,/g;' "$@" | column -t -s, | less  -F -S -X -K
}

# Remove local branches that lack remotes: "git clean local branches"
function gclb () {
    git fetch -p;
    for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}');
    do git branch -D $branch;
    done
}

# sts_ecg project: print AUCs in a results directory
function aucs () {
    for file in */log*
    do
        tac "$file" | grep -m 1 -hoE "ROC AUC.*= 0.[0-9]{3}" | grep -hoE "0.[0-9]{3}"
    done
}

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Manage Jupyter Lab on remote server  #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Set default values that can be overidden by input args
REMOTEUSER=erik
SERVER=mithril
PORT=3745

# Start Jupyter lab session over SSH
# remote_nb_start user server port
# e.g. "remote_nb_start erik mithril 3745"
function remote_nb_start () {
    ssh -f ${1:-$REMOTEUSER}@${2:-$SERVER} \
        ". ~/.zshrc ; jupyter lab --no-browser --port=${3:-$PORT}"
}

# Forward port and open browser to localhost at that port to see the Lab session
# User should manually call this function, rather than calling it inside remote_nb_start,
# because starting Jupyter is slow. The notebook must finish initializing before
# forwarding the port and opening a browser.
# port_forward user server port
# e.g. "port_forward erik mithril 3745"
function port_forward () {
    ssh -N -f -L localhost:${3:-$PORT}:localhost:${3:-$PORT} \
        ${1:-$REMOTEUSER}@${2:-$SERVER}; open http://localhost:${3:-$PORT} &
}

# If it is your first time opening the notebook on local, click on the URL shown in the
# terminal output to open localhost with the token, or set a password.

# Shut down remote Jupyter server, and kill local listening process
function remote_nb_stop () {
    ssh -f ${1:-$REMOTEUSER}@${2:-$SERVER} \
        ". ~/.zshrc ; jupyter notebook stop ${3:-$PORT}" ;
    kill $(lsof -ti :${3:-$PORT}) &
}
